{"ast":null,"code":"var _jsxFileName = \"/home/nilson/Dropbox/repositories/be-the-hero/frontend/src/App.js\";\nimport React, { useState } from 'react'; // useState - utilizado para modificar o estado de uma variável\n\nimport Header from './Header'; // Componente - função no JavaScript que retorna um HTML que pode ter funcionalidade JS, CSS, etc. (Nome de componente sempre começa com letra maiúscula)\n// JSX (JavaScript XML) - HTML integrado dentro do JavaScript\n// Propriedade - similar aos atribudos HTML\n\nfunction App() {\n  /**\n   * Conceitos de estado e imudabilidade\n   * Toda vez que um componente precise armazenar uma informação dentro dele deverá ser criado um estado, que permitirá alterar as informações e refletir essa alteração na interface\n   * \n   *  */\n  const [counter, setCounter] = useState(0);\n\n  function increment() {\n    setCounter(counter + 1);\n  }\n\n  return (\n    /*#__PURE__*/\n    // propriedade title\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, \"Contador: \", counter), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, \"Increment\"))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nilson/Dropbox/repositories/be-the-hero/frontend/src/App.js"],"names":["React","useState","Header","App","counter","setCounter","increment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC,C,CAA0C;;AAE1C,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AACA;;AACA,SAASC,GAAT,GAAe;AACb;;;;;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC;;AAGA,WAASK,SAAT,GAAqB;AACnBD,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;;AAED;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaA,OADb,CADF,eAIE;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF;AAFF;AASD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState }  from 'react'; // useState - utilizado para modificar o estado de uma variável\n\nimport Header from './Header';\n\n// Componente - função no JavaScript que retorna um HTML que pode ter funcionalidade JS, CSS, etc. (Nome de componente sempre começa com letra maiúscula)\n// JSX (JavaScript XML) - HTML integrado dentro do JavaScript\n// Propriedade - similar aos atribudos HTML\nfunction App() {\n  /**\n   * Conceitos de estado e imudabilidade\n   * Toda vez que um componente precise armazenar uma informação dentro dele deverá ser criado um estado, que permitirá alterar as informações e refletir essa alteração na interface\n   * \n   *  */ \n  \n  const [counter, setCounter] = useState(0);\n \n\n  function increment() {\n    setCounter(counter + 1);\n  }\n\n  return (\n    // propriedade title\n    <div>\n      <Header>\n        Contador: {counter} \n      </Header>\n      <button onClick={increment}>Increment</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}